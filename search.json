[{"path":"https://tidy-intelligence.github.io/r-oecdoda/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Christoph Scheuch Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://tidy-intelligence.github.io/r-oecdoda/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christoph Scheuch. Author, maintainer, copyright holder.","code":""},{"path":"https://tidy-intelligence.github.io/r-oecdoda/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Scheuch C (2025). oecdoda: Seamless Access OECD Official Development Assistance (ODA) Data. R package version 0.1.0, https://github.com/tidy-intelligence/r-oecdoda.","code":"@Manual{,   title = {oecdoda: Seamless Access to OECD Official Development Assistance (ODA) Data},   author = {Christoph Scheuch},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/tidy-intelligence/r-oecdoda}, }"},{"path":"https://tidy-intelligence.github.io/r-oecdoda/index.html","id":"oecdoda","dir":"","previous_headings":"","what":"Seamless Access to OECD Official Development Assistance (ODA) Data","title":"Seamless Access to OECD Official Development Assistance (ODA) Data","text":"Access Analyze Official Development Assistance (ODA) using OECD API. ODA data includes sovereign-level aid data key aggregates (DAC1), geographical distributions (DAC2A), project-level data (CRS), multilateral contributions (Multisystem). package part EconDataverse family packages aimed helping economists financial professionals work sovereign-level economic data. Python implementation similar interface, see oda-reader. package product Christoph Scheuch sponsored affiliated OECD way, except use OECD API.","code":""},{"path":"https://tidy-intelligence.github.io/r-oecdoda/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Seamless Access to OECD Official Development Assistance (ODA) Data","text":"can install oecdoda CRAN via: can install development version oecdoda GitHub :","code":"install.packages(\"oecdoda\") # install.packages(\"pak\") pak::pak(\"tidy-intelligence/r-oecdoda\")"},{"path":"https://tidy-intelligence.github.io/r-oecdoda/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Seamless Access to OECD Official Development Assistance (ODA) Data","text":"Load package: oecdoda simplifies access multiple datasets OECD API. dataset provides specific filters, can listed using:","code":"library(oecdoda) oda_list_filters() #> $`DSD_DAC1@DF_DAC1` #> [1] \"donor\"        \"measure\"      \"untied\"       \"flow_type\"    \"unit_measure\" #> [6] \"price_base\"   \"period\"       #>  #> $`DSD_DAC2@DF_DAC2A` #> [1] \"donor\"        \"recipient\"    \"measure\"      \"unit_measure\" \"price_base\"   #>  #> $`DSD_CRS@DF_CRS` #>  [1] \"donor\"        \"recipient\"    \"sector\"       \"measure\"      \"channel\"      #>  [6] \"modality\"     \"flow_type\"    \"price_base\"   \"md_dim\"       \"md_id\"        #> [11] \"unit_measure\" #>  #> $`DSD_GREQ@DF_CRS_GREQ` #>  [1] \"donor\"        \"recipient\"    \"sector\"       \"measure\"      \"channel\"      #>  [6] \"modality\"     \"flow_type\"    \"price_base\"   \"md_dim\"       \"md_id\"        #> [11] \"unit_measure\" #>  #> $`DSD_MULTI@DF_MULTI` #>  [1] \"donor\"        \"recipient\"    \"sector\"       \"measure\"      \"channel\"      #>  [6] \"flow_type\"    \"price_base\"   \"md_dim\"       \"md_id\"        \"unit_measure\""},{"path":"https://tidy-intelligence.github.io/r-oecdoda/index.html","id":"downloading-dac1-data","dir":"","previous_headings":"Usage","what":"Downloading DAC1 Data","title":"Seamless Access to OECD Official Development Assistance (ODA) Data","text":"DAC1 dataset includes key aggregates ODA flows grant equivalents DAC members providers, well resource flows developing countries.","code":"oda_get_dac1(   start_year = 2018,   end_year = 2022,   filters = list(     donor = c(\"FRA\", \"USA\"),     measure = 11017,     flow_type = 1160,     unit_measure = \"XDC\",     price_base = \"V\"   ) ) #> # A tibble: 5 × 14 #>   entity_id entity_name series_id series_name  flow_type_id flow_type_name  year #>   <chr>     <chr>           <int> <chr>               <int> <chr>          <int> #> 1 FRA       France          11017 Bilateral l…         1160 Grant equival…  2018 #> 2 FRA       France          11017 Bilateral l…         1160 Grant equival…  2020 #> 3 FRA       France          11017 Bilateral l…         1160 Grant equival…  2019 #> 4 FRA       France          11017 Bilateral l…         1160 Grant equival…  2022 #> 5 FRA       France          11017 Bilateral l…         1160 Grant equival…  2021 #> # ℹ 7 more variables: value <dbl>, unit_measure_id <chr>, #> #   unit_measure_name <chr>, price_base_id <chr>, price_base_name <chr>, #> #   unit_multiplier_id <int>, unit_multiplier_name <chr>"},{"path":"https://tidy-intelligence.github.io/r-oecdoda/index.html","id":"downloading-dac2a-data","dir":"","previous_headings":"Usage","what":"Downloading DAC2A Data","title":"Seamless Access to OECD Official Development Assistance (ODA) Data","text":"DAC2A dataset provides data geographical distribution bilateral multilateral ODA disbursements developing countries territories DAC List ODA recipients. Data available donor, recipient, aid type (e.g., grants, loans, technical cooperation, philanthropic flows).","code":"oda_get_dac2a(   start_year = 2018,   end_year = 2022,   filters = list(     donor = \"GBR\",     recipient = c(\"GTM\", \"CHN\"),     measure = 106,     price_base = \"Q\"   ) ) #> # A tibble: 10 × 16 #>    entity_id entity_name   counterpart_id counterpart_name series_id series_name #>    <chr>     <chr>         <chr>          <chr>                <int> <chr>       #>  1 GBR       United Kingd… CHN            China (People’s…       106 Imputed mu… #>  2 GBR       United Kingd… GTM            Guatemala              106 Imputed mu… #>  3 GBR       United Kingd… CHN            China (People’s…       106 Imputed mu… #>  4 GBR       United Kingd… GTM            Guatemala              106 Imputed mu… #>  5 GBR       United Kingd… CHN            China (People’s…       106 Imputed mu… #>  6 GBR       United Kingd… GTM            Guatemala              106 Imputed mu… #>  7 GBR       United Kingd… CHN            China (People’s…       106 Imputed mu… #>  8 GBR       United Kingd… GTM            Guatemala              106 Imputed mu… #>  9 GBR       United Kingd… CHN            China (People’s…       106 Imputed mu… #> 10 GBR       United Kingd… GTM            Guatemala              106 Imputed mu… #> # ℹ 10 more variables: flow_type_id <chr>, flow_type_name <chr>, year <int>, #> #   value <dbl>, unit_measure_id <chr>, unit_measure_name <chr>, #> #   price_base_id <chr>, price_base_name <chr>, unit_multiplier_id <int>, #> #   unit_multiplier_name <chr>"},{"path":"https://tidy-intelligence.github.io/r-oecdoda/index.html","id":"downloading-crs-data","dir":"","previous_headings":"Usage","what":"Downloading CRS Data","title":"Seamless Access to OECD Official Development Assistance (ODA) Data","text":"CRS dataset provides granular, activity-level statistics provides aid, , purpose, flow basis grant-equivalent basis.","code":"oda_get_crs(   start_year = 2018,   end_year = 2022,   filters = list(     donor = c(\"AUT\", \"FRA\", \"USA\"),     recipient = \"BIH\",     measure = 100,     channel = 60000,     price_base = \"Q\"   ) ) #> # A tibble: 1,257 × 20 #>    entity_id entity_name   counterpart_id counterpart_name series_id series_name #>    <chr>     <chr>         <chr>          <chr>                <int> <chr>       #>  1 USA       United States BIH            Bosnia and Herz…       100 Official D… #>  2 USA       United States BIH            Bosnia and Herz…       100 Official D… #>  3 USA       United States BIH            Bosnia and Herz…       100 Official D… #>  4 USA       United States BIH            Bosnia and Herz…       100 Official D… #>  5 USA       United States BIH            Bosnia and Herz…       100 Official D… #>  6 USA       United States BIH            Bosnia and Herz…       100 Official D… #>  7 USA       United States BIH            Bosnia and Herz…       100 Official D… #>  8 USA       United States BIH            Bosnia and Herz…       100 Official D… #>  9 USA       United States BIH            Bosnia and Herz…       100 Official D… #> 10 USA       United States BIH            Bosnia and Herz…       100 Official D… #> # ℹ 1,247 more rows #> # ℹ 14 more variables: flow_type_id <chr>, flow_type_name <chr>, #> #   channel_id <int>, channelt_name <chr>, modality_id <chr>, #> #   modality_name <chr>, year <int>, value <dbl>, unit_measure_id <chr>, #> #   unit_measure_name <chr>, price_base_id <chr>, price_base_name <chr>, #> #   unit_multiplier_id <int>, unit_multiplier_name <chr>"},{"path":"https://tidy-intelligence.github.io/r-oecdoda/index.html","id":"downloading-multisystem-data","dir":"","previous_headings":"Usage","what":"Downloading Multisystem Data","title":"Seamless Access to OECD Official Development Assistance (ODA) Data","text":"Multisystem dataset presents providers’ total use multilateral system, including core contributions multilateral organizations bilateral aid channeled organizations.","code":"oda_get_multisystem(   start_year = 2018,   end_year = 2022,   filters = list(     donor = \"DAC\",     recipient = \"DPGC\",     sector = 1000,     measure = 10   ) ) #> # A tibble: 3,152 × 18 #>    entity_id entity_name   counterpart_id counterpart_name series_id series_name #>    <chr>     <chr>         <chr>          <chr>                <int> <chr>       #>  1 DAC       DAC countries DPGC           Developing coun…        10 Core contr… #>  2 DAC       DAC countries DPGC           Developing coun…        10 Core contr… #>  3 DAC       DAC countries DPGC           Developing coun…        10 Core contr… #>  4 DAC       DAC countries DPGC           Developing coun…        10 Core contr… #>  5 DAC       DAC countries DPGC           Developing coun…        10 Core contr… #>  6 DAC       DAC countries DPGC           Developing coun…        10 Core contr… #>  7 DAC       DAC countries DPGC           Developing coun…        10 Core contr… #>  8 DAC       DAC countries DPGC           Developing coun…        10 Core contr… #>  9 DAC       DAC countries DPGC           Developing coun…        10 Core contr… #> 10 DAC       DAC countries DPGC           Developing coun…        10 Core contr… #> # ℹ 3,142 more rows #> # ℹ 12 more variables: flow_type_id <chr>, flow_type_name <chr>, #> #   channel_id <int>, channel_name <chr>, year <int>, value <dbl>, #> #   unit_measure_id <chr>, unit_measure_name <chr>, price_base_id <chr>, #> #   price_base_name <chr>, unit_multiplier_id <int>, unit_multiplier_name <chr>"},{"path":"https://tidy-intelligence.github.io/r-oecdoda/index.html","id":"rate-limiting","dir":"","previous_headings":"Usage","what":"Rate Limiting","title":"Seamless Access to OECD Official Development Assistance (ODA) Data","text":"oecdoda automatically handles limits OECD API 20 calls per minute. want change limits, use following options:","code":"options(   oecdoda.rate_capacity = 10,   oecdoda.rate_fill_time = 60 )"},{"path":"https://tidy-intelligence.github.io/r-oecdoda/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Seamless Access to OECD Official Development Assistance (ODA) Data","text":"Contributions oecdoda welcome! ’d like contribute, please follow steps: Create issue: making changes, create issue describing bug feature ’re addressing. Fork repository: receiving supportive feedback package authors, fork repository GitHub account. Create branch: Create branch changes descriptive name. Make changes: Implement bug fix feature. Test changes: Run tests ensure changes don’t break existing functionality. Submit pull request: Push changes fork submit pull request main repository.","code":""},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oda_get_crs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get OECD Creditor Reporting System (CRS) data — oda_get_crs","title":"Get OECD Creditor Reporting System (CRS) data — oda_get_crs","text":"Retrieves data OECD CRS dataset using specified filters, years, optional pre-processing.","code":""},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oda_get_crs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get OECD Creditor Reporting System (CRS) data — oda_get_crs","text":"","code":"oda_get_crs(   start_year = NULL,   end_year = NULL,   filters = NULL,   pre_process = TRUE,   as_grant_equivalent = FALSE )"},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oda_get_crs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get OECD Creditor Reporting System (CRS) data — oda_get_crs","text":"start_year Integer. starting year data query. NULL, lower bound set. Defaults NULL. end_year Integer. ending year data query. NULL, upper bound set. Defaults NULL. filters List. named list filters apply (e.g., donor codes, easure, flow type, unit measure, price base). Values must match OECD dotstat codes. pre_process Logical. Whether clean rename columns standard format. FALSE, returns raw output. Defaults TRUE. as_grant_equivalent Logical. Whether 'flows' 'grant equivalent' version CRS returned.","code":""},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oda_get_crs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get OECD Creditor Reporting System (CRS) data — oda_get_crs","text":"data frame containing OECD CRS data","code":""},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oda_get_crs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get OECD Creditor Reporting System (CRS) data — oda_get_crs","text":"","code":"# \\donttest{ oda_get_crs(   start_year = 2018,   end_year = 2022,   filters = list(     donor = c(\"AUT\", \"FRA\", \"USA\"),     recipient = \"BIH\",     measure = 100,     channel = 60000,     price_base = \"Q\"   ) ) #> # A tibble: 1,257 × 20 #>    entity_id entity_name   counterpart_id counterpart_name series_id series_name #>    <chr>     <chr>         <chr>          <chr>                <int> <chr>       #>  1 USA       United States BIH            Bosnia and Herz…       100 Official D… #>  2 USA       United States BIH            Bosnia and Herz…       100 Official D… #>  3 USA       United States BIH            Bosnia and Herz…       100 Official D… #>  4 USA       United States BIH            Bosnia and Herz…       100 Official D… #>  5 USA       United States BIH            Bosnia and Herz…       100 Official D… #>  6 USA       United States BIH            Bosnia and Herz…       100 Official D… #>  7 USA       United States BIH            Bosnia and Herz…       100 Official D… #>  8 USA       United States BIH            Bosnia and Herz…       100 Official D… #>  9 USA       United States BIH            Bosnia and Herz…       100 Official D… #> 10 USA       United States BIH            Bosnia and Herz…       100 Official D… #> # ℹ 1,247 more rows #> # ℹ 14 more variables: flow_type_id <chr>, flow_type_name <chr>, #> #   channel_id <int>, channelt_name <chr>, modality_id <chr>, #> #   modality_name <chr>, year <int>, value <dbl>, unit_measure_id <chr>, #> #   unit_measure_name <chr>, price_base_id <chr>, price_base_name <chr>, #> #   unit_multiplier_id <int>, unit_multiplier_name <chr> # }"},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oda_get_dac1.html","id":null,"dir":"Reference","previous_headings":"","what":"Get OECD DAC1 Official Development Assistance (ODA) data — oda_get_dac1","title":"Get OECD DAC1 Official Development Assistance (ODA) data — oda_get_dac1","text":"Retrieves data OECD DAC1 dataset using specified filters, years, optional pre-processing.","code":""},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oda_get_dac1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get OECD DAC1 Official Development Assistance (ODA) data — oda_get_dac1","text":"","code":"oda_get_dac1(   start_year = NULL,   end_year = NULL,   filters = NULL,   pre_process = TRUE )"},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oda_get_dac1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get OECD DAC1 Official Development Assistance (ODA) data — oda_get_dac1","text":"start_year Integer. starting year data query. NULL, lower bound set. Defaults NULL. end_year Integer. ending year data query. NULL, upper bound set. Defaults NULL. filters List. named list filters apply (e.g., donor codes, easure, flow type, unit measure, price base). Values must match OECD dotstat codes. pre_process Logical. Whether clean rename columns standard format. FALSE, returns raw output. Defaults TRUE.","code":""},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oda_get_dac1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get OECD DAC1 Official Development Assistance (ODA) data — oda_get_dac1","text":"data frame containing OECD DAC1 data","code":""},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oda_get_dac1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get OECD DAC1 Official Development Assistance (ODA) data — oda_get_dac1","text":"","code":"# \\donttest{ oda_get_dac1(   start_year = 2018,   end_year = 2022,   filters = list(donor = c(\"FRA\", \"USA\")) ) #> # A tibble: 9,744 × 14 #>    entity_id entity_name series_id series_name flow_type_id flow_type_name  year #>    <chr>     <chr>           <int> <chr>              <int> <chr>          <int> #>  1 USA       United Sta…      1902 Memo: Free…         1140 Disbursements…  2018 #>  2 USA       United Sta…      1902 Memo: Free…         1140 Disbursements…  2019 #>  3 USA       United Sta…      1902 Memo: Free…         1140 Disbursements…  2020 #>  4 USA       United Sta…      1902 Memo: Free…         1140 Disbursements…  2021 #>  5 USA       United Sta…      1902 Memo: Free…         1140 Disbursements…  2022 #>  6 USA       United Sta…      1310 Investment…         1140 Disbursements…  2018 #>  7 USA       United Sta…      1310 Investment…         1140 Disbursements…  2019 #>  8 USA       United Sta…      1310 Investment…         1140 Disbursements…  2020 #>  9 USA       United Sta…      1310 Investment…         1140 Disbursements…  2021 #> 10 USA       United Sta…      1310 Investment…         1140 Disbursements…  2022 #> # ℹ 9,734 more rows #> # ℹ 7 more variables: value <dbl>, unit_measure_id <chr>, #> #   unit_measure_name <chr>, price_base_id <chr>, price_base_name <chr>, #> #   unit_multiplier_id <int>, unit_multiplier_name <chr>  oda_get_dac1(   start_year = 2018,   end_year = 2022,   filters = list(     donor = c(\"FRA\", \"USA\"),     measure = 11017,     flow_type = 1160,     unit_measure = \"XDC\",     price_base = \"V\"   ) ) #> # A tibble: 5 × 14 #>   entity_id entity_name series_id series_name  flow_type_id flow_type_name  year #>   <chr>     <chr>           <int> <chr>               <int> <chr>          <int> #> 1 FRA       France          11017 Bilateral l…         1160 Grant equival…  2018 #> 2 FRA       France          11017 Bilateral l…         1160 Grant equival…  2020 #> 3 FRA       France          11017 Bilateral l…         1160 Grant equival…  2019 #> 4 FRA       France          11017 Bilateral l…         1160 Grant equival…  2022 #> 5 FRA       France          11017 Bilateral l…         1160 Grant equival…  2021 #> # ℹ 7 more variables: value <dbl>, unit_measure_id <chr>, #> #   unit_measure_name <chr>, price_base_id <chr>, price_base_name <chr>, #> #   unit_multiplier_id <int>, unit_multiplier_name <chr> # }"},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oda_get_dac2a.html","id":null,"dir":"Reference","previous_headings":"","what":"Get OECD DAC2A Official Development Assistance (ODA) data — oda_get_dac2a","title":"Get OECD DAC2A Official Development Assistance (ODA) data — oda_get_dac2a","text":"Retrieves data OECD DAC2A dataset using specified filters, years, optional pre-processing.","code":""},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oda_get_dac2a.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get OECD DAC2A Official Development Assistance (ODA) data — oda_get_dac2a","text":"","code":"oda_get_dac2a(   start_year = NULL,   end_year = NULL,   filters = NULL,   pre_process = TRUE )"},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oda_get_dac2a.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get OECD DAC2A Official Development Assistance (ODA) data — oda_get_dac2a","text":"start_year Integer. starting year data query. NULL, lower bound set. Defaults NULL. end_year Integer. ending year data query. NULL, upper bound set. Defaults NULL. filters List. named list filters apply (e.g., donor codes, easure, flow type, unit measure, price base). Values must match OECD dotstat codes. pre_process Logical. Whether clean rename columns standard format. FALSE, returns raw output. Defaults TRUE.","code":""},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oda_get_dac2a.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get OECD DAC2A Official Development Assistance (ODA) data — oda_get_dac2a","text":"data frame containing OECD DAC2A data","code":""},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oda_get_dac2a.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get OECD DAC2A Official Development Assistance (ODA) data — oda_get_dac2a","text":"","code":"# \\donttest{ oda_get_dac2a(   start_year = 2018,   end_year = 2022,   filters = list(recipient = c(\"TGO\", \"NGA\")) ) #> # A tibble: 14,208 × 16 #>    entity_id entity_name   counterpart_id counterpart_name series_id series_name #>    <chr>     <chr>         <chr>          <chr>                <int> <chr>       #>  1 DACEU_EC  DAC EU count… NGA            Nigeria                213 Developmen… #>  2 AUS       Australia     NGA            Nigeria                201 ODA grants… #>  3 AUS       Australia     TGO            Togo                   106 Imputed mu… #>  4 AUS       Australia     NGA            Nigeria                106 Imputed mu… #>  5 AUS       Australia     TGO            Togo                   207 Technical … #>  6 AUS       Australia     NGA            Nigeria                207 Technical … #>  7 AUS       Australia     NGA            Nigeria                286 ODA as per… #>  8 SVN       Slovenia      NGA            Nigeria                296 ODA per ca… #>  9 AUS       Australia     NGA            Nigeria                296 ODA per ca… #> 10 AUS       Australia     TGO            Togo                   286 ODA as per… #> # ℹ 14,198 more rows #> # ℹ 10 more variables: flow_type_id <chr>, flow_type_name <chr>, year <int>, #> #   value <dbl>, unit_measure_id <chr>, unit_measure_name <chr>, #> #   price_base_id <chr>, price_base_name <chr>, unit_multiplier_id <int>, #> #   unit_multiplier_name <chr>  oda_get_dac2a(   start_year = 2018,   end_year = 2022,   filters = list(     donor = \"GBR\",     recipient = c(\"GTM\",\"CHN\"),     measure = 106,     price_base = \"Q\"   ) ) #> # A tibble: 10 × 16 #>    entity_id entity_name   counterpart_id counterpart_name series_id series_name #>    <chr>     <chr>         <chr>          <chr>                <int> <chr>       #>  1 GBR       United Kingd… CHN            China (People’s…       106 Imputed mu… #>  2 GBR       United Kingd… GTM            Guatemala              106 Imputed mu… #>  3 GBR       United Kingd… CHN            China (People’s…       106 Imputed mu… #>  4 GBR       United Kingd… GTM            Guatemala              106 Imputed mu… #>  5 GBR       United Kingd… CHN            China (People’s…       106 Imputed mu… #>  6 GBR       United Kingd… GTM            Guatemala              106 Imputed mu… #>  7 GBR       United Kingd… CHN            China (People’s…       106 Imputed mu… #>  8 GBR       United Kingd… GTM            Guatemala              106 Imputed mu… #>  9 GBR       United Kingd… CHN            China (People’s…       106 Imputed mu… #> 10 GBR       United Kingd… GTM            Guatemala              106 Imputed mu… #> # ℹ 10 more variables: flow_type_id <chr>, flow_type_name <chr>, year <int>, #> #   value <dbl>, unit_measure_id <chr>, unit_measure_name <chr>, #> #   price_base_id <chr>, price_base_name <chr>, unit_multiplier_id <int>, #> #   unit_multiplier_name <chr> # }"},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oda_get_multisystem.html","id":null,"dir":"Reference","previous_headings":"","what":"Get OECD Members Total Use of the Multilateral System (Multisystem) — oda_get_multisystem","title":"Get OECD Members Total Use of the Multilateral System (Multisystem) — oda_get_multisystem","text":"Retrieves data OECD Multisystem dataset using specified filters, years, optional pre-processing.","code":""},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oda_get_multisystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get OECD Members Total Use of the Multilateral System (Multisystem) — oda_get_multisystem","text":"","code":"oda_get_multisystem(   start_year = NULL,   end_year = NULL,   filters = NULL,   pre_process = TRUE )"},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oda_get_multisystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get OECD Members Total Use of the Multilateral System (Multisystem) — oda_get_multisystem","text":"start_year Integer. starting year data query. NULL, lower bound set. Defaults NULL. end_year Integer. ending year data query. NULL, upper bound set. Defaults NULL. filters List. named list filters apply (e.g., donor codes, easure, flow type, unit measure, price base). Values must match OECD dotstat codes. pre_process Logical. Whether clean rename columns standard format. FALSE, returns raw output. Defaults TRUE.","code":""},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oda_get_multisystem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get OECD Members Total Use of the Multilateral System (Multisystem) — oda_get_multisystem","text":"data frame containing OECD Multisystem data","code":""},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oda_get_multisystem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get OECD Members Total Use of the Multilateral System (Multisystem) — oda_get_multisystem","text":"","code":"# \\donttest{ oda_get_multisystem(   start_year = 2018,   end_year = 2022,   filters = list(     donor = \"DAC\",     recipient = \"DPGC\",     sector = 1000,     measure = 10   ) ) #> # A tibble: 3,152 × 18 #>    entity_id entity_name   counterpart_id counterpart_name series_id series_name #>    <chr>     <chr>         <chr>          <chr>                <int> <chr>       #>  1 DAC       DAC countries DPGC           Developing coun…        10 Core contr… #>  2 DAC       DAC countries DPGC           Developing coun…        10 Core contr… #>  3 DAC       DAC countries DPGC           Developing coun…        10 Core contr… #>  4 DAC       DAC countries DPGC           Developing coun…        10 Core contr… #>  5 DAC       DAC countries DPGC           Developing coun…        10 Core contr… #>  6 DAC       DAC countries DPGC           Developing coun…        10 Core contr… #>  7 DAC       DAC countries DPGC           Developing coun…        10 Core contr… #>  8 DAC       DAC countries DPGC           Developing coun…        10 Core contr… #>  9 DAC       DAC countries DPGC           Developing coun…        10 Core contr… #> 10 DAC       DAC countries DPGC           Developing coun…        10 Core contr… #> # ℹ 3,142 more rows #> # ℹ 12 more variables: flow_type_id <chr>, flow_type_name <chr>, #> #   channel_id <int>, channel_name <chr>, year <int>, value <dbl>, #> #   unit_measure_id <chr>, unit_measure_name <chr>, price_base_id <chr>, #> #   price_base_name <chr>, unit_multiplier_id <int>, unit_multiplier_name <chr> # }"},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oda_list_filters.html","id":null,"dir":"Reference","previous_headings":"","what":"List Available Filters for an ODA Resource — oda_list_filters","title":"List Available Filters for an ODA Resource — oda_list_filters","text":"List Available Filters ODA Resource","code":""},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oda_list_filters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Available Filters for an ODA Resource — oda_list_filters","text":"","code":"oda_list_filters(resource = NULL)"},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oda_list_filters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Available Filters for an ODA Resource — oda_list_filters","text":"resource character string identifying resource (e.g., \"DSD_CRS@DF_CRS\").","code":""},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oda_list_filters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Available Filters for an ODA Resource — oda_list_filters","text":"character vector available filter names given resource.","code":""},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oda_list_filters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Available Filters for an ODA Resource — oda_list_filters","text":"","code":"oda_list_filters(\"DSD_CRS@DF_CRS\") #>  [1] \"donor\"        \"recipient\"    \"sector\"       \"measure\"      \"channel\"      #>  [6] \"modality\"     \"flow_type\"    \"price_base\"   \"md_dim\"       \"md_id\"        #> [11] \"unit_measure\"  oda_list_filters(\"DSD_DAC2@DF_DAC2A\") #> [1] \"donor\"        \"recipient\"    \"measure\"      \"unit_measure\" \"price_base\""},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oecdoda-package.html","id":null,"dir":"Reference","previous_headings":"","what":"oecdoda: Seamless Access to OECD Official Development Assistance (ODA) Data — oecdoda-package","title":"oecdoda: Seamless Access to OECD Official Development Assistance (ODA) Data — oecdoda-package","text":"Access Analyze Official Development Assistance (ODA) data using OECD API https://gitlab.algobank.oecd.org/public-documentation/dotstat-migration/-/raw/main/OECD_Data_API_documentation.pdf. ODA data includes sovereign-level aid data key aggregates (DAC1), geographical distributions (DAC2A), project-level data (CRS), multilateral contributions (Multisystem).","code":""},{"path":[]},{"path":"https://tidy-intelligence.github.io/r-oecdoda/reference/oecdoda-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"oecdoda: Seamless Access to OECD Official Development Assistance (ODA) Data — oecdoda-package","text":"Maintainer: Christoph Scheuch christoph@tidy-intelligence.com (ORCID) [copyright holder]","code":""},{"path":"https://tidy-intelligence.github.io/r-oecdoda/news/index.html","id":"oecdoda-010","dir":"Changelog","previous_headings":"","what":"oecdoda 0.1.0","title":"oecdoda 0.1.0","text":"Initial CRAN submission oda_get_dac1(), oda_get_dac2a(), oda_get_crs(), oda_get_multisystem(), oda_list_filters().","code":""}]
